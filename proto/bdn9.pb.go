// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.26.0
// 	protoc        v3.12.4
// source: proto/bdn9.proto

package proto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Layer int32

const (
	Layer_LAYER_DEFAULT     Layer = 0
	Layer_LAYER_PROGRAMMING Layer = 1
	Layer_LAYER_DEBUGGING   Layer = 2
	Layer_LAYER_SLACK       Layer = 3
	Layer_LAYER_TEAMS       Layer = 4
	Layer_LAYER_MAX         Layer = 5 // not a valid layer
)

// Enum value maps for Layer.
var (
	Layer_name = map[int32]string{
		0: "LAYER_DEFAULT",
		1: "LAYER_PROGRAMMING",
		2: "LAYER_DEBUGGING",
		3: "LAYER_SLACK",
		4: "LAYER_TEAMS",
		5: "LAYER_MAX",
	}
	Layer_value = map[string]int32{
		"LAYER_DEFAULT":     0,
		"LAYER_PROGRAMMING": 1,
		"LAYER_DEBUGGING":   2,
		"LAYER_SLACK":       3,
		"LAYER_TEAMS":       4,
		"LAYER_MAX":         5,
	}
)

func (x Layer) Enum() *Layer {
	p := new(Layer)
	*p = x
	return p
}

func (x Layer) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Layer) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_bdn9_proto_enumTypes[0].Descriptor()
}

func (Layer) Type() protoreflect.EnumType {
	return &file_proto_bdn9_proto_enumTypes[0]
}

func (x Layer) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Layer.Descriptor instead.
func (Layer) EnumDescriptor() ([]byte, []int) {
	return file_proto_bdn9_proto_rawDescGZIP(), []int{0}
}

type RGBMode int32

const (
	RGBMode_RGB_MATRIX_INVALID                   RGBMode = 0 // not valid
	RGBMode_RGB_MATRIX_SOLID_COLOR               RGBMode = 1
	RGBMode_RGB_MATRIX_ALPHAS_MODS               RGBMode = 2
	RGBMode_RGB_MATRIX_GRADIENT_UP_DOWN          RGBMode = 3
	RGBMode_RGB_MATRIX_GRADIENT_LEFT_RIGHT       RGBMode = 4
	RGBMode_RGB_MATRIX_BREATHING                 RGBMode = 5
	RGBMode_RGB_MATRIX_BAND_SAT                  RGBMode = 6
	RGBMode_RGB_MATRIX_BAND_VAL                  RGBMode = 7
	RGBMode_RGB_MATRIX_BAND_PINWHEEL_SAT         RGBMode = 8
	RGBMode_RGB_MATRIX_BAND_PINWHEEL_VAL         RGBMode = 9
	RGBMode_RGB_MATRIX_BAND_SPIRAL_SAT           RGBMode = 10
	RGBMode_RGB_MATRIX_BAND_SPIRAL_VAL           RGBMode = 11
	RGBMode_RGB_MATRIX_CYCLE_ALL                 RGBMode = 12
	RGBMode_RGB_MATRIX_CYCLE_LEFT_RIGHT          RGBMode = 13
	RGBMode_RGB_MATRIX_CYCLE_UP_DOWN             RGBMode = 14
	RGBMode_RGB_MATRIX_CYCLE_OUT_IN              RGBMode = 15
	RGBMode_RGB_MATRIX_CYCLE_OUT_IN_DUAL         RGBMode = 16
	RGBMode_RGB_MATRIX_RAINBOW_MOVING_CHEVRON    RGBMode = 17
	RGBMode_RGB_MATRIX_CYCLE_PINWHEEL            RGBMode = 18
	RGBMode_RGB_MATRIX_CYCLE_SPIRAL              RGBMode = 19
	RGBMode_RGB_MATRIX_DUAL_BEACON               RGBMode = 20
	RGBMode_RGB_MATRIX_RAINBOW_BEACON            RGBMode = 21
	RGBMode_RGB_MATRIX_RAINBOW_PINWHEELS         RGBMode = 22
	RGBMode_RGB_MATRIX_RAINDROPS                 RGBMode = 23
	RGBMode_RGB_MATRIX_JELLYBEAN_RAINDROPS       RGBMode = 24
	RGBMode_RGB_MATRIX_TYPING_HEATMAP            RGBMode = 25
	RGBMode_RGB_MATRIX_DIGITAL_RAIN              RGBMode = 26
	RGBMode_RGB_MATRIX_SOLID_REACTIVE_SIMPLE     RGBMode = 27
	RGBMode_RGB_MATRIX_SOLID_REACTIVE            RGBMode = 28
	RGBMode_RGB_MATRIX_SOLID_REACTIVE_WIDE       RGBMode = 29
	RGBMode_RGB_MATRIX_SOLID_REACTIVE_MULTIWIDE  RGBMode = 30
	RGBMode_RGB_MATRIX_SOLID_REACTIVE_CROSS      RGBMode = 31
	RGBMode_RGB_MATRIX_SOLID_REACTIVE_MULTICROSS RGBMode = 32
	RGBMode_RGB_MATRIX_SOLID_REACTIVE_NEXUS      RGBMode = 33
	RGBMode_RGB_MATRIX_SOLID_REACTIVE_MULTINEXUS RGBMode = 34
	RGBMode_RGB_MATRIX_SPLASH                    RGBMode = 35
	RGBMode_RGB_MATRIX_MULTISPLASH               RGBMode = 36
	RGBMode_RGB_MATRIX_SOLID_SPLASH              RGBMode = 37
	RGBMode_RGB_MATRIX_SOLID_MULTISPLASH         RGBMode = 38
	RGBMode_RGB_MATRIX_MAX                       RGBMode = 39 // not valid
)

// Enum value maps for RGBMode.
var (
	RGBMode_name = map[int32]string{
		0:  "RGB_MATRIX_INVALID",
		1:  "RGB_MATRIX_SOLID_COLOR",
		2:  "RGB_MATRIX_ALPHAS_MODS",
		3:  "RGB_MATRIX_GRADIENT_UP_DOWN",
		4:  "RGB_MATRIX_GRADIENT_LEFT_RIGHT",
		5:  "RGB_MATRIX_BREATHING",
		6:  "RGB_MATRIX_BAND_SAT",
		7:  "RGB_MATRIX_BAND_VAL",
		8:  "RGB_MATRIX_BAND_PINWHEEL_SAT",
		9:  "RGB_MATRIX_BAND_PINWHEEL_VAL",
		10: "RGB_MATRIX_BAND_SPIRAL_SAT",
		11: "RGB_MATRIX_BAND_SPIRAL_VAL",
		12: "RGB_MATRIX_CYCLE_ALL",
		13: "RGB_MATRIX_CYCLE_LEFT_RIGHT",
		14: "RGB_MATRIX_CYCLE_UP_DOWN",
		15: "RGB_MATRIX_CYCLE_OUT_IN",
		16: "RGB_MATRIX_CYCLE_OUT_IN_DUAL",
		17: "RGB_MATRIX_RAINBOW_MOVING_CHEVRON",
		18: "RGB_MATRIX_CYCLE_PINWHEEL",
		19: "RGB_MATRIX_CYCLE_SPIRAL",
		20: "RGB_MATRIX_DUAL_BEACON",
		21: "RGB_MATRIX_RAINBOW_BEACON",
		22: "RGB_MATRIX_RAINBOW_PINWHEELS",
		23: "RGB_MATRIX_RAINDROPS",
		24: "RGB_MATRIX_JELLYBEAN_RAINDROPS",
		25: "RGB_MATRIX_TYPING_HEATMAP",
		26: "RGB_MATRIX_DIGITAL_RAIN",
		27: "RGB_MATRIX_SOLID_REACTIVE_SIMPLE",
		28: "RGB_MATRIX_SOLID_REACTIVE",
		29: "RGB_MATRIX_SOLID_REACTIVE_WIDE",
		30: "RGB_MATRIX_SOLID_REACTIVE_MULTIWIDE",
		31: "RGB_MATRIX_SOLID_REACTIVE_CROSS",
		32: "RGB_MATRIX_SOLID_REACTIVE_MULTICROSS",
		33: "RGB_MATRIX_SOLID_REACTIVE_NEXUS",
		34: "RGB_MATRIX_SOLID_REACTIVE_MULTINEXUS",
		35: "RGB_MATRIX_SPLASH",
		36: "RGB_MATRIX_MULTISPLASH",
		37: "RGB_MATRIX_SOLID_SPLASH",
		38: "RGB_MATRIX_SOLID_MULTISPLASH",
		39: "RGB_MATRIX_MAX",
	}
	RGBMode_value = map[string]int32{
		"RGB_MATRIX_INVALID":                   0,
		"RGB_MATRIX_SOLID_COLOR":               1,
		"RGB_MATRIX_ALPHAS_MODS":               2,
		"RGB_MATRIX_GRADIENT_UP_DOWN":          3,
		"RGB_MATRIX_GRADIENT_LEFT_RIGHT":       4,
		"RGB_MATRIX_BREATHING":                 5,
		"RGB_MATRIX_BAND_SAT":                  6,
		"RGB_MATRIX_BAND_VAL":                  7,
		"RGB_MATRIX_BAND_PINWHEEL_SAT":         8,
		"RGB_MATRIX_BAND_PINWHEEL_VAL":         9,
		"RGB_MATRIX_BAND_SPIRAL_SAT":           10,
		"RGB_MATRIX_BAND_SPIRAL_VAL":           11,
		"RGB_MATRIX_CYCLE_ALL":                 12,
		"RGB_MATRIX_CYCLE_LEFT_RIGHT":          13,
		"RGB_MATRIX_CYCLE_UP_DOWN":             14,
		"RGB_MATRIX_CYCLE_OUT_IN":              15,
		"RGB_MATRIX_CYCLE_OUT_IN_DUAL":         16,
		"RGB_MATRIX_RAINBOW_MOVING_CHEVRON":    17,
		"RGB_MATRIX_CYCLE_PINWHEEL":            18,
		"RGB_MATRIX_CYCLE_SPIRAL":              19,
		"RGB_MATRIX_DUAL_BEACON":               20,
		"RGB_MATRIX_RAINBOW_BEACON":            21,
		"RGB_MATRIX_RAINBOW_PINWHEELS":         22,
		"RGB_MATRIX_RAINDROPS":                 23,
		"RGB_MATRIX_JELLYBEAN_RAINDROPS":       24,
		"RGB_MATRIX_TYPING_HEATMAP":            25,
		"RGB_MATRIX_DIGITAL_RAIN":              26,
		"RGB_MATRIX_SOLID_REACTIVE_SIMPLE":     27,
		"RGB_MATRIX_SOLID_REACTIVE":            28,
		"RGB_MATRIX_SOLID_REACTIVE_WIDE":       29,
		"RGB_MATRIX_SOLID_REACTIVE_MULTIWIDE":  30,
		"RGB_MATRIX_SOLID_REACTIVE_CROSS":      31,
		"RGB_MATRIX_SOLID_REACTIVE_MULTICROSS": 32,
		"RGB_MATRIX_SOLID_REACTIVE_NEXUS":      33,
		"RGB_MATRIX_SOLID_REACTIVE_MULTINEXUS": 34,
		"RGB_MATRIX_SPLASH":                    35,
		"RGB_MATRIX_MULTISPLASH":               36,
		"RGB_MATRIX_SOLID_SPLASH":              37,
		"RGB_MATRIX_SOLID_MULTISPLASH":         38,
		"RGB_MATRIX_MAX":                       39,
	}
)

func (x RGBMode) Enum() *RGBMode {
	p := new(RGBMode)
	*p = x
	return p
}

func (x RGBMode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (RGBMode) Descriptor() protoreflect.EnumDescriptor {
	return file_proto_bdn9_proto_enumTypes[1].Descriptor()
}

func (RGBMode) Type() protoreflect.EnumType {
	return &file_proto_bdn9_proto_enumTypes[1]
}

func (x RGBMode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use RGBMode.Descriptor instead.
func (RGBMode) EnumDescriptor() ([]byte, []int) {
	return file_proto_bdn9_proto_rawDescGZIP(), []int{1}
}

type SetRGBModeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Mode    uint32 `protobuf:"varint,1,opt,name=mode,proto3" json:"mode,omitempty"`
	Persist bool   `protobuf:"varint,2,opt,name=persist,proto3" json:"persist,omitempty"`
}

func (x *SetRGBModeRequest) Reset() {
	*x = SetRGBModeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_bdn9_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetRGBModeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetRGBModeRequest) ProtoMessage() {}

func (x *SetRGBModeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_bdn9_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetRGBModeRequest.ProtoReflect.Descriptor instead.
func (*SetRGBModeRequest) Descriptor() ([]byte, []int) {
	return file_proto_bdn9_proto_rawDescGZIP(), []int{0}
}

func (x *SetRGBModeRequest) GetMode() uint32 {
	if x != nil {
		return x.Mode
	}
	return 0
}

func (x *SetRGBModeRequest) GetPersist() bool {
	if x != nil {
		return x.Persist
	}
	return false
}

type SetRGBModeReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *SetRGBModeReply) Reset() {
	*x = SetRGBModeReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_bdn9_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetRGBModeReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetRGBModeReply) ProtoMessage() {}

func (x *SetRGBModeReply) ProtoReflect() protoreflect.Message {
	mi := &file_proto_bdn9_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetRGBModeReply.ProtoReflect.Descriptor instead.
func (*SetRGBModeReply) Descriptor() ([]byte, []int) {
	return file_proto_bdn9_proto_rawDescGZIP(), []int{1}
}

type SetMatrixHSVRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	H       uint32 `protobuf:"varint,1,opt,name=h,proto3" json:"h,omitempty"`
	S       uint32 `protobuf:"varint,2,opt,name=s,proto3" json:"s,omitempty"`
	V       uint32 `protobuf:"varint,3,opt,name=v,proto3" json:"v,omitempty"`
	Persist bool   `protobuf:"varint,4,opt,name=persist,proto3" json:"persist,omitempty"`
}

func (x *SetMatrixHSVRequest) Reset() {
	*x = SetMatrixHSVRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_bdn9_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetMatrixHSVRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetMatrixHSVRequest) ProtoMessage() {}

func (x *SetMatrixHSVRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_bdn9_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetMatrixHSVRequest.ProtoReflect.Descriptor instead.
func (*SetMatrixHSVRequest) Descriptor() ([]byte, []int) {
	return file_proto_bdn9_proto_rawDescGZIP(), []int{2}
}

func (x *SetMatrixHSVRequest) GetH() uint32 {
	if x != nil {
		return x.H
	}
	return 0
}

func (x *SetMatrixHSVRequest) GetS() uint32 {
	if x != nil {
		return x.S
	}
	return 0
}

func (x *SetMatrixHSVRequest) GetV() uint32 {
	if x != nil {
		return x.V
	}
	return 0
}

func (x *SetMatrixHSVRequest) GetPersist() bool {
	if x != nil {
		return x.Persist
	}
	return false
}

type SetMatrixHSVReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *SetMatrixHSVReply) Reset() {
	*x = SetMatrixHSVReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_bdn9_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetMatrixHSVReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetMatrixHSVReply) ProtoMessage() {}

func (x *SetMatrixHSVReply) ProtoReflect() protoreflect.Message {
	mi := &file_proto_bdn9_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetMatrixHSVReply.ProtoReflect.Descriptor instead.
func (*SetMatrixHSVReply) Descriptor() ([]byte, []int) {
	return file_proto_bdn9_proto_rawDescGZIP(), []int{3}
}

type ToggleMatrixRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Persist bool `protobuf:"varint,1,opt,name=persist,proto3" json:"persist,omitempty"`
}

func (x *ToggleMatrixRequest) Reset() {
	*x = ToggleMatrixRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_bdn9_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ToggleMatrixRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ToggleMatrixRequest) ProtoMessage() {}

func (x *ToggleMatrixRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_bdn9_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ToggleMatrixRequest.ProtoReflect.Descriptor instead.
func (*ToggleMatrixRequest) Descriptor() ([]byte, []int) {
	return file_proto_bdn9_proto_rawDescGZIP(), []int{4}
}

func (x *ToggleMatrixRequest) GetPersist() bool {
	if x != nil {
		return x.Persist
	}
	return false
}

type ToggleMatrixReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ToggleMatrixReply) Reset() {
	*x = ToggleMatrixReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_bdn9_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ToggleMatrixReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ToggleMatrixReply) ProtoMessage() {}

func (x *ToggleMatrixReply) ProtoReflect() protoreflect.Message {
	mi := &file_proto_bdn9_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ToggleMatrixReply.ProtoReflect.Descriptor instead.
func (*ToggleMatrixReply) Descriptor() ([]byte, []int) {
	return file_proto_bdn9_proto_rawDescGZIP(), []int{5}
}

type SetIndicatorHSVRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	H       uint32 `protobuf:"varint,1,opt,name=h,proto3" json:"h,omitempty"`
	S       uint32 `protobuf:"varint,2,opt,name=s,proto3" json:"s,omitempty"`
	V       uint32 `protobuf:"varint,3,opt,name=v,proto3" json:"v,omitempty"`
	Key     uint32 `protobuf:"varint,4,opt,name=key,proto3" json:"key,omitempty"`
	Persist bool   `protobuf:"varint,5,opt,name=persist,proto3" json:"persist,omitempty"`
	Layer   Layer  `protobuf:"varint,6,opt,name=layer,proto3,enum=Layer" json:"layer,omitempty"`
}

func (x *SetIndicatorHSVRequest) Reset() {
	*x = SetIndicatorHSVRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_bdn9_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetIndicatorHSVRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetIndicatorHSVRequest) ProtoMessage() {}

func (x *SetIndicatorHSVRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_bdn9_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetIndicatorHSVRequest.ProtoReflect.Descriptor instead.
func (*SetIndicatorHSVRequest) Descriptor() ([]byte, []int) {
	return file_proto_bdn9_proto_rawDescGZIP(), []int{6}
}

func (x *SetIndicatorHSVRequest) GetH() uint32 {
	if x != nil {
		return x.H
	}
	return 0
}

func (x *SetIndicatorHSVRequest) GetS() uint32 {
	if x != nil {
		return x.S
	}
	return 0
}

func (x *SetIndicatorHSVRequest) GetV() uint32 {
	if x != nil {
		return x.V
	}
	return 0
}

func (x *SetIndicatorHSVRequest) GetKey() uint32 {
	if x != nil {
		return x.Key
	}
	return 0
}

func (x *SetIndicatorHSVRequest) GetPersist() bool {
	if x != nil {
		return x.Persist
	}
	return false
}

func (x *SetIndicatorHSVRequest) GetLayer() Layer {
	if x != nil {
		return x.Layer
	}
	return Layer_LAYER_DEFAULT
}

type SetIndicatorHSVReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *SetIndicatorHSVReply) Reset() {
	*x = SetIndicatorHSVReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_bdn9_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetIndicatorHSVReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetIndicatorHSVReply) ProtoMessage() {}

func (x *SetIndicatorHSVReply) ProtoReflect() protoreflect.Message {
	mi := &file_proto_bdn9_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetIndicatorHSVReply.ProtoReflect.Descriptor instead.
func (*SetIndicatorHSVReply) Descriptor() ([]byte, []int) {
	return file_proto_bdn9_proto_rawDescGZIP(), []int{7}
}

type ToggleIndicatorRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key   uint32 `protobuf:"varint,1,opt,name=key,proto3" json:"key,omitempty"`
	Layer Layer  `protobuf:"varint,2,opt,name=layer,proto3,enum=Layer" json:"layer,omitempty"`
}

func (x *ToggleIndicatorRequest) Reset() {
	*x = ToggleIndicatorRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_bdn9_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ToggleIndicatorRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ToggleIndicatorRequest) ProtoMessage() {}

func (x *ToggleIndicatorRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_bdn9_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ToggleIndicatorRequest.ProtoReflect.Descriptor instead.
func (*ToggleIndicatorRequest) Descriptor() ([]byte, []int) {
	return file_proto_bdn9_proto_rawDescGZIP(), []int{8}
}

func (x *ToggleIndicatorRequest) GetKey() uint32 {
	if x != nil {
		return x.Key
	}
	return 0
}

func (x *ToggleIndicatorRequest) GetLayer() Layer {
	if x != nil {
		return x.Layer
	}
	return Layer_LAYER_DEFAULT
}

type ToggleIndicatorReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ToggleIndicatorReply) Reset() {
	*x = ToggleIndicatorReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_bdn9_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ToggleIndicatorReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ToggleIndicatorReply) ProtoMessage() {}

func (x *ToggleIndicatorReply) ProtoReflect() protoreflect.Message {
	mi := &file_proto_bdn9_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ToggleIndicatorReply.ProtoReflect.Descriptor instead.
func (*ToggleIndicatorReply) Descriptor() ([]byte, []int) {
	return file_proto_bdn9_proto_rawDescGZIP(), []int{9}
}

type EnableIndicatorRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key   uint32 `protobuf:"varint,1,opt,name=key,proto3" json:"key,omitempty"`
	Layer Layer  `protobuf:"varint,2,opt,name=layer,proto3,enum=Layer" json:"layer,omitempty"`
}

func (x *EnableIndicatorRequest) Reset() {
	*x = EnableIndicatorRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_bdn9_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EnableIndicatorRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EnableIndicatorRequest) ProtoMessage() {}

func (x *EnableIndicatorRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_bdn9_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EnableIndicatorRequest.ProtoReflect.Descriptor instead.
func (*EnableIndicatorRequest) Descriptor() ([]byte, []int) {
	return file_proto_bdn9_proto_rawDescGZIP(), []int{10}
}

func (x *EnableIndicatorRequest) GetKey() uint32 {
	if x != nil {
		return x.Key
	}
	return 0
}

func (x *EnableIndicatorRequest) GetLayer() Layer {
	if x != nil {
		return x.Layer
	}
	return Layer_LAYER_DEFAULT
}

type EnableIndicatorReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *EnableIndicatorReply) Reset() {
	*x = EnableIndicatorReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_bdn9_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EnableIndicatorReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EnableIndicatorReply) ProtoMessage() {}

func (x *EnableIndicatorReply) ProtoReflect() protoreflect.Message {
	mi := &file_proto_bdn9_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EnableIndicatorReply.ProtoReflect.Descriptor instead.
func (*EnableIndicatorReply) Descriptor() ([]byte, []int) {
	return file_proto_bdn9_proto_rawDescGZIP(), []int{11}
}

type DisableIndicatorRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key   uint32 `protobuf:"varint,1,opt,name=key,proto3" json:"key,omitempty"`
	Layer Layer  `protobuf:"varint,2,opt,name=layer,proto3,enum=Layer" json:"layer,omitempty"`
}

func (x *DisableIndicatorRequest) Reset() {
	*x = DisableIndicatorRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_bdn9_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DisableIndicatorRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DisableIndicatorRequest) ProtoMessage() {}

func (x *DisableIndicatorRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_bdn9_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DisableIndicatorRequest.ProtoReflect.Descriptor instead.
func (*DisableIndicatorRequest) Descriptor() ([]byte, []int) {
	return file_proto_bdn9_proto_rawDescGZIP(), []int{12}
}

func (x *DisableIndicatorRequest) GetKey() uint32 {
	if x != nil {
		return x.Key
	}
	return 0
}

func (x *DisableIndicatorRequest) GetLayer() Layer {
	if x != nil {
		return x.Layer
	}
	return Layer_LAYER_DEFAULT
}

type DisableIndicatorReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DisableIndicatorReply) Reset() {
	*x = DisableIndicatorReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_bdn9_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *DisableIndicatorReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DisableIndicatorReply) ProtoMessage() {}

func (x *DisableIndicatorReply) ProtoReflect() protoreflect.Message {
	mi := &file_proto_bdn9_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DisableIndicatorReply.ProtoReflect.Descriptor instead.
func (*DisableIndicatorReply) Descriptor() ([]byte, []int) {
	return file_proto_bdn9_proto_rawDescGZIP(), []int{13}
}

type ActivateLayerRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Layer Layer `protobuf:"varint,1,opt,name=layer,proto3,enum=Layer" json:"layer,omitempty"`
}

func (x *ActivateLayerRequest) Reset() {
	*x = ActivateLayerRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_bdn9_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ActivateLayerRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ActivateLayerRequest) ProtoMessage() {}

func (x *ActivateLayerRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_bdn9_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ActivateLayerRequest.ProtoReflect.Descriptor instead.
func (*ActivateLayerRequest) Descriptor() ([]byte, []int) {
	return file_proto_bdn9_proto_rawDescGZIP(), []int{14}
}

func (x *ActivateLayerRequest) GetLayer() Layer {
	if x != nil {
		return x.Layer
	}
	return Layer_LAYER_DEFAULT
}

type ActivateLayerReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ActivateLayerReply) Reset() {
	*x = ActivateLayerReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_bdn9_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ActivateLayerReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ActivateLayerReply) ProtoMessage() {}

func (x *ActivateLayerReply) ProtoReflect() protoreflect.Message {
	mi := &file_proto_bdn9_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ActivateLayerReply.ProtoReflect.Descriptor instead.
func (*ActivateLayerReply) Descriptor() ([]byte, []int) {
	return file_proto_bdn9_proto_rawDescGZIP(), []int{15}
}

type SetSpeedRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Speed   uint32 `protobuf:"varint,1,opt,name=speed,proto3" json:"speed,omitempty"`
	Persist bool   `protobuf:"varint,2,opt,name=persist,proto3" json:"persist,omitempty"`
}

func (x *SetSpeedRequest) Reset() {
	*x = SetSpeedRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_bdn9_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetSpeedRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetSpeedRequest) ProtoMessage() {}

func (x *SetSpeedRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_bdn9_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetSpeedRequest.ProtoReflect.Descriptor instead.
func (*SetSpeedRequest) Descriptor() ([]byte, []int) {
	return file_proto_bdn9_proto_rawDescGZIP(), []int{16}
}

func (x *SetSpeedRequest) GetSpeed() uint32 {
	if x != nil {
		return x.Speed
	}
	return 0
}

func (x *SetSpeedRequest) GetPersist() bool {
	if x != nil {
		return x.Persist
	}
	return false
}

type SetSpeedReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *SetSpeedReply) Reset() {
	*x = SetSpeedReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_bdn9_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetSpeedReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetSpeedReply) ProtoMessage() {}

func (x *SetSpeedReply) ProtoReflect() protoreflect.Message {
	mi := &file_proto_bdn9_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetSpeedReply.ProtoReflect.Descriptor instead.
func (*SetSpeedReply) Descriptor() ([]byte, []int) {
	return file_proto_bdn9_proto_rawDescGZIP(), []int{17}
}

type SetMuteStatusRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Muted bool `protobuf:"varint,1,opt,name=muted,proto3" json:"muted,omitempty"`
}

func (x *SetMuteStatusRequest) Reset() {
	*x = SetMuteStatusRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_bdn9_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetMuteStatusRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetMuteStatusRequest) ProtoMessage() {}

func (x *SetMuteStatusRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_bdn9_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetMuteStatusRequest.ProtoReflect.Descriptor instead.
func (*SetMuteStatusRequest) Descriptor() ([]byte, []int) {
	return file_proto_bdn9_proto_rawDescGZIP(), []int{18}
}

func (x *SetMuteStatusRequest) GetMuted() bool {
	if x != nil {
		return x.Muted
	}
	return false
}

type SetMuteStatusReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *SetMuteStatusReply) Reset() {
	*x = SetMuteStatusReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_bdn9_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SetMuteStatusReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SetMuteStatusReply) ProtoMessage() {}

func (x *SetMuteStatusReply) ProtoReflect() protoreflect.Message {
	mi := &file_proto_bdn9_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SetMuteStatusReply.ProtoReflect.Descriptor instead.
func (*SetMuteStatusReply) Descriptor() ([]byte, []int) {
	return file_proto_bdn9_proto_rawDescGZIP(), []int{19}
}

type EndCallRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *EndCallRequest) Reset() {
	*x = EndCallRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_bdn9_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EndCallRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EndCallRequest) ProtoMessage() {}

func (x *EndCallRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_bdn9_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EndCallRequest.ProtoReflect.Descriptor instead.
func (*EndCallRequest) Descriptor() ([]byte, []int) {
	return file_proto_bdn9_proto_rawDescGZIP(), []int{20}
}

type EndCallReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *EndCallReply) Reset() {
	*x = EndCallReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_bdn9_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EndCallReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EndCallReply) ProtoMessage() {}

func (x *EndCallReply) ProtoReflect() protoreflect.Message {
	mi := &file_proto_bdn9_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EndCallReply.ProtoReflect.Descriptor instead.
func (*EndCallReply) Descriptor() ([]byte, []int) {
	return file_proto_bdn9_proto_rawDescGZIP(), []int{21}
}

type ResetRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ResetRequest) Reset() {
	*x = ResetRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_bdn9_proto_msgTypes[22]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResetRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResetRequest) ProtoMessage() {}

func (x *ResetRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_bdn9_proto_msgTypes[22]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResetRequest.ProtoReflect.Descriptor instead.
func (*ResetRequest) Descriptor() ([]byte, []int) {
	return file_proto_bdn9_proto_rawDescGZIP(), []int{22}
}

type ResetReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ResetReply) Reset() {
	*x = ResetReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_bdn9_proto_msgTypes[23]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ResetReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ResetReply) ProtoMessage() {}

func (x *ResetReply) ProtoReflect() protoreflect.Message {
	mi := &file_proto_bdn9_proto_msgTypes[23]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ResetReply.ProtoReflect.Descriptor instead.
func (*ResetReply) Descriptor() ([]byte, []int) {
	return file_proto_bdn9_proto_rawDescGZIP(), []int{23}
}

type EchoRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *EchoRequest) Reset() {
	*x = EchoRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_bdn9_proto_msgTypes[24]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EchoRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EchoRequest) ProtoMessage() {}

func (x *EchoRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_bdn9_proto_msgTypes[24]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EchoRequest.ProtoReflect.Descriptor instead.
func (*EchoRequest) Descriptor() ([]byte, []int) {
	return file_proto_bdn9_proto_rawDescGZIP(), []int{24}
}

type EchoReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *EchoReply) Reset() {
	*x = EchoReply{}
	if protoimpl.UnsafeEnabled {
		mi := &file_proto_bdn9_proto_msgTypes[25]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EchoReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EchoReply) ProtoMessage() {}

func (x *EchoReply) ProtoReflect() protoreflect.Message {
	mi := &file_proto_bdn9_proto_msgTypes[25]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EchoReply.ProtoReflect.Descriptor instead.
func (*EchoReply) Descriptor() ([]byte, []int) {
	return file_proto_bdn9_proto_rawDescGZIP(), []int{25}
}

var File_proto_bdn9_proto protoreflect.FileDescriptor

var file_proto_bdn9_proto_rawDesc = []byte{
	0x0a, 0x10, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x62, 0x64, 0x6e, 0x39, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x22, 0x41, 0x0a, 0x11, 0x53, 0x65, 0x74, 0x52, 0x47, 0x42, 0x4d, 0x6f, 0x64, 0x65,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6d, 0x6f, 0x64, 0x65, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x04, 0x6d, 0x6f, 0x64, 0x65, 0x12, 0x18, 0x0a, 0x07, 0x70,
	0x65, 0x72, 0x73, 0x69, 0x73, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x70, 0x65,
	0x72, 0x73, 0x69, 0x73, 0x74, 0x22, 0x11, 0x0a, 0x0f, 0x53, 0x65, 0x74, 0x52, 0x47, 0x42, 0x4d,
	0x6f, 0x64, 0x65, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x59, 0x0a, 0x13, 0x53, 0x65, 0x74, 0x4d,
	0x61, 0x74, 0x72, 0x69, 0x78, 0x48, 0x53, 0x56, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x0c, 0x0a, 0x01, 0x68, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x01, 0x68, 0x12, 0x0c, 0x0a,
	0x01, 0x73, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x01, 0x73, 0x12, 0x0c, 0x0a, 0x01, 0x76,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x01, 0x76, 0x12, 0x18, 0x0a, 0x07, 0x70, 0x65, 0x72,
	0x73, 0x69, 0x73, 0x74, 0x18, 0x04, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x70, 0x65, 0x72, 0x73,
	0x69, 0x73, 0x74, 0x22, 0x13, 0x0a, 0x11, 0x53, 0x65, 0x74, 0x4d, 0x61, 0x74, 0x72, 0x69, 0x78,
	0x48, 0x53, 0x56, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x2f, 0x0a, 0x13, 0x54, 0x6f, 0x67, 0x67,
	0x6c, 0x65, 0x4d, 0x61, 0x74, 0x72, 0x69, 0x78, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x18, 0x0a, 0x07, 0x70, 0x65, 0x72, 0x73, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x07, 0x70, 0x65, 0x72, 0x73, 0x69, 0x73, 0x74, 0x22, 0x13, 0x0a, 0x11, 0x54, 0x6f, 0x67,
	0x67, 0x6c, 0x65, 0x4d, 0x61, 0x74, 0x72, 0x69, 0x78, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x8c,
	0x01, 0x0a, 0x16, 0x53, 0x65, 0x74, 0x49, 0x6e, 0x64, 0x69, 0x63, 0x61, 0x74, 0x6f, 0x72, 0x48,
	0x53, 0x56, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x0c, 0x0a, 0x01, 0x68, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x01, 0x68, 0x12, 0x0c, 0x0a, 0x01, 0x73, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0d, 0x52, 0x01, 0x73, 0x12, 0x0c, 0x0a, 0x01, 0x76, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x01, 0x76, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x18, 0x0a, 0x07, 0x70, 0x65, 0x72, 0x73, 0x69, 0x73, 0x74,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x70, 0x65, 0x72, 0x73, 0x69, 0x73, 0x74, 0x12,
	0x1c, 0x0a, 0x05, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x06,
	0x2e, 0x4c, 0x61, 0x79, 0x65, 0x72, 0x52, 0x05, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x22, 0x16, 0x0a,
	0x14, 0x53, 0x65, 0x74, 0x49, 0x6e, 0x64, 0x69, 0x63, 0x61, 0x74, 0x6f, 0x72, 0x48, 0x53, 0x56,
	0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x48, 0x0a, 0x16, 0x54, 0x6f, 0x67, 0x67, 0x6c, 0x65, 0x49,
	0x6e, 0x64, 0x69, 0x63, 0x61, 0x74, 0x6f, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12,
	0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x03, 0x6b, 0x65,
	0x79, 0x12, 0x1c, 0x0a, 0x05, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0e,
	0x32, 0x06, 0x2e, 0x4c, 0x61, 0x79, 0x65, 0x72, 0x52, 0x05, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x22,
	0x16, 0x0a, 0x14, 0x54, 0x6f, 0x67, 0x67, 0x6c, 0x65, 0x49, 0x6e, 0x64, 0x69, 0x63, 0x61, 0x74,
	0x6f, 0x72, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x48, 0x0a, 0x16, 0x45, 0x6e, 0x61, 0x62, 0x6c,
	0x65, 0x49, 0x6e, 0x64, 0x69, 0x63, 0x61, 0x74, 0x6f, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x03,
	0x6b, 0x65, 0x79, 0x12, 0x1c, 0x0a, 0x05, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x06, 0x2e, 0x4c, 0x61, 0x79, 0x65, 0x72, 0x52, 0x05, 0x6c, 0x61, 0x79, 0x65,
	0x72, 0x22, 0x16, 0x0a, 0x14, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x49, 0x6e, 0x64, 0x69, 0x63,
	0x61, 0x74, 0x6f, 0x72, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x49, 0x0a, 0x17, 0x44, 0x69, 0x73,
	0x61, 0x62, 0x6c, 0x65, 0x49, 0x6e, 0x64, 0x69, 0x63, 0x61, 0x74, 0x6f, 0x72, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x1c, 0x0a, 0x05, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x06, 0x2e, 0x4c, 0x61, 0x79, 0x65, 0x72, 0x52, 0x05, 0x6c,
	0x61, 0x79, 0x65, 0x72, 0x22, 0x17, 0x0a, 0x15, 0x44, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x49,
	0x6e, 0x64, 0x69, 0x63, 0x61, 0x74, 0x6f, 0x72, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x34, 0x0a,
	0x14, 0x41, 0x63, 0x74, 0x69, 0x76, 0x61, 0x74, 0x65, 0x4c, 0x61, 0x79, 0x65, 0x72, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1c, 0x0a, 0x05, 0x6c, 0x61, 0x79, 0x65, 0x72, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x06, 0x2e, 0x4c, 0x61, 0x79, 0x65, 0x72, 0x52, 0x05, 0x6c, 0x61,
	0x79, 0x65, 0x72, 0x22, 0x14, 0x0a, 0x12, 0x41, 0x63, 0x74, 0x69, 0x76, 0x61, 0x74, 0x65, 0x4c,
	0x61, 0x79, 0x65, 0x72, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x41, 0x0a, 0x0f, 0x53, 0x65, 0x74,
	0x53, 0x70, 0x65, 0x65, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05,
	0x73, 0x70, 0x65, 0x65, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x05, 0x73, 0x70, 0x65,
	0x65, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x70, 0x65, 0x72, 0x73, 0x69, 0x73, 0x74, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x08, 0x52, 0x07, 0x70, 0x65, 0x72, 0x73, 0x69, 0x73, 0x74, 0x22, 0x0f, 0x0a, 0x0d,
	0x53, 0x65, 0x74, 0x53, 0x70, 0x65, 0x65, 0x64, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x2c, 0x0a,
	0x14, 0x53, 0x65, 0x74, 0x4d, 0x75, 0x74, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65,
	0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x14, 0x0a, 0x05, 0x6d, 0x75, 0x74, 0x65, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x08, 0x52, 0x05, 0x6d, 0x75, 0x74, 0x65, 0x64, 0x22, 0x14, 0x0a, 0x12, 0x53,
	0x65, 0x74, 0x4d, 0x75, 0x74, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x70, 0x6c,
	0x79, 0x22, 0x10, 0x0a, 0x0e, 0x45, 0x6e, 0x64, 0x43, 0x61, 0x6c, 0x6c, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x22, 0x0e, 0x0a, 0x0c, 0x45, 0x6e, 0x64, 0x43, 0x61, 0x6c, 0x6c, 0x52, 0x65,
	0x70, 0x6c, 0x79, 0x22, 0x0e, 0x0a, 0x0c, 0x52, 0x65, 0x73, 0x65, 0x74, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x22, 0x0c, 0x0a, 0x0a, 0x52, 0x65, 0x73, 0x65, 0x74, 0x52, 0x65, 0x70, 0x6c,
	0x79, 0x22, 0x0d, 0x0a, 0x0b, 0x45, 0x63, 0x68, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x22, 0x0b, 0x0a, 0x09, 0x45, 0x63, 0x68, 0x6f, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x2a, 0x77, 0x0a,
	0x05, 0x4c, 0x61, 0x79, 0x65, 0x72, 0x12, 0x11, 0x0a, 0x0d, 0x4c, 0x41, 0x59, 0x45, 0x52, 0x5f,
	0x44, 0x45, 0x46, 0x41, 0x55, 0x4c, 0x54, 0x10, 0x00, 0x12, 0x15, 0x0a, 0x11, 0x4c, 0x41, 0x59,
	0x45, 0x52, 0x5f, 0x50, 0x52, 0x4f, 0x47, 0x52, 0x41, 0x4d, 0x4d, 0x49, 0x4e, 0x47, 0x10, 0x01,
	0x12, 0x13, 0x0a, 0x0f, 0x4c, 0x41, 0x59, 0x45, 0x52, 0x5f, 0x44, 0x45, 0x42, 0x55, 0x47, 0x47,
	0x49, 0x4e, 0x47, 0x10, 0x02, 0x12, 0x0f, 0x0a, 0x0b, 0x4c, 0x41, 0x59, 0x45, 0x52, 0x5f, 0x53,
	0x4c, 0x41, 0x43, 0x4b, 0x10, 0x03, 0x12, 0x0f, 0x0a, 0x0b, 0x4c, 0x41, 0x59, 0x45, 0x52, 0x5f,
	0x54, 0x45, 0x41, 0x4d, 0x53, 0x10, 0x04, 0x12, 0x0d, 0x0a, 0x09, 0x4c, 0x41, 0x59, 0x45, 0x52,
	0x5f, 0x4d, 0x41, 0x58, 0x10, 0x05, 0x2a, 0xf6, 0x09, 0x0a, 0x07, 0x52, 0x47, 0x42, 0x4d, 0x6f,
	0x64, 0x65, 0x12, 0x16, 0x0a, 0x12, 0x52, 0x47, 0x42, 0x5f, 0x4d, 0x41, 0x54, 0x52, 0x49, 0x58,
	0x5f, 0x49, 0x4e, 0x56, 0x41, 0x4c, 0x49, 0x44, 0x10, 0x00, 0x12, 0x1a, 0x0a, 0x16, 0x52, 0x47,
	0x42, 0x5f, 0x4d, 0x41, 0x54, 0x52, 0x49, 0x58, 0x5f, 0x53, 0x4f, 0x4c, 0x49, 0x44, 0x5f, 0x43,
	0x4f, 0x4c, 0x4f, 0x52, 0x10, 0x01, 0x12, 0x1a, 0x0a, 0x16, 0x52, 0x47, 0x42, 0x5f, 0x4d, 0x41,
	0x54, 0x52, 0x49, 0x58, 0x5f, 0x41, 0x4c, 0x50, 0x48, 0x41, 0x53, 0x5f, 0x4d, 0x4f, 0x44, 0x53,
	0x10, 0x02, 0x12, 0x1f, 0x0a, 0x1b, 0x52, 0x47, 0x42, 0x5f, 0x4d, 0x41, 0x54, 0x52, 0x49, 0x58,
	0x5f, 0x47, 0x52, 0x41, 0x44, 0x49, 0x45, 0x4e, 0x54, 0x5f, 0x55, 0x50, 0x5f, 0x44, 0x4f, 0x57,
	0x4e, 0x10, 0x03, 0x12, 0x22, 0x0a, 0x1e, 0x52, 0x47, 0x42, 0x5f, 0x4d, 0x41, 0x54, 0x52, 0x49,
	0x58, 0x5f, 0x47, 0x52, 0x41, 0x44, 0x49, 0x45, 0x4e, 0x54, 0x5f, 0x4c, 0x45, 0x46, 0x54, 0x5f,
	0x52, 0x49, 0x47, 0x48, 0x54, 0x10, 0x04, 0x12, 0x18, 0x0a, 0x14, 0x52, 0x47, 0x42, 0x5f, 0x4d,
	0x41, 0x54, 0x52, 0x49, 0x58, 0x5f, 0x42, 0x52, 0x45, 0x41, 0x54, 0x48, 0x49, 0x4e, 0x47, 0x10,
	0x05, 0x12, 0x17, 0x0a, 0x13, 0x52, 0x47, 0x42, 0x5f, 0x4d, 0x41, 0x54, 0x52, 0x49, 0x58, 0x5f,
	0x42, 0x41, 0x4e, 0x44, 0x5f, 0x53, 0x41, 0x54, 0x10, 0x06, 0x12, 0x17, 0x0a, 0x13, 0x52, 0x47,
	0x42, 0x5f, 0x4d, 0x41, 0x54, 0x52, 0x49, 0x58, 0x5f, 0x42, 0x41, 0x4e, 0x44, 0x5f, 0x56, 0x41,
	0x4c, 0x10, 0x07, 0x12, 0x20, 0x0a, 0x1c, 0x52, 0x47, 0x42, 0x5f, 0x4d, 0x41, 0x54, 0x52, 0x49,
	0x58, 0x5f, 0x42, 0x41, 0x4e, 0x44, 0x5f, 0x50, 0x49, 0x4e, 0x57, 0x48, 0x45, 0x45, 0x4c, 0x5f,
	0x53, 0x41, 0x54, 0x10, 0x08, 0x12, 0x20, 0x0a, 0x1c, 0x52, 0x47, 0x42, 0x5f, 0x4d, 0x41, 0x54,
	0x52, 0x49, 0x58, 0x5f, 0x42, 0x41, 0x4e, 0x44, 0x5f, 0x50, 0x49, 0x4e, 0x57, 0x48, 0x45, 0x45,
	0x4c, 0x5f, 0x56, 0x41, 0x4c, 0x10, 0x09, 0x12, 0x1e, 0x0a, 0x1a, 0x52, 0x47, 0x42, 0x5f, 0x4d,
	0x41, 0x54, 0x52, 0x49, 0x58, 0x5f, 0x42, 0x41, 0x4e, 0x44, 0x5f, 0x53, 0x50, 0x49, 0x52, 0x41,
	0x4c, 0x5f, 0x53, 0x41, 0x54, 0x10, 0x0a, 0x12, 0x1e, 0x0a, 0x1a, 0x52, 0x47, 0x42, 0x5f, 0x4d,
	0x41, 0x54, 0x52, 0x49, 0x58, 0x5f, 0x42, 0x41, 0x4e, 0x44, 0x5f, 0x53, 0x50, 0x49, 0x52, 0x41,
	0x4c, 0x5f, 0x56, 0x41, 0x4c, 0x10, 0x0b, 0x12, 0x18, 0x0a, 0x14, 0x52, 0x47, 0x42, 0x5f, 0x4d,
	0x41, 0x54, 0x52, 0x49, 0x58, 0x5f, 0x43, 0x59, 0x43, 0x4c, 0x45, 0x5f, 0x41, 0x4c, 0x4c, 0x10,
	0x0c, 0x12, 0x1f, 0x0a, 0x1b, 0x52, 0x47, 0x42, 0x5f, 0x4d, 0x41, 0x54, 0x52, 0x49, 0x58, 0x5f,
	0x43, 0x59, 0x43, 0x4c, 0x45, 0x5f, 0x4c, 0x45, 0x46, 0x54, 0x5f, 0x52, 0x49, 0x47, 0x48, 0x54,
	0x10, 0x0d, 0x12, 0x1c, 0x0a, 0x18, 0x52, 0x47, 0x42, 0x5f, 0x4d, 0x41, 0x54, 0x52, 0x49, 0x58,
	0x5f, 0x43, 0x59, 0x43, 0x4c, 0x45, 0x5f, 0x55, 0x50, 0x5f, 0x44, 0x4f, 0x57, 0x4e, 0x10, 0x0e,
	0x12, 0x1b, 0x0a, 0x17, 0x52, 0x47, 0x42, 0x5f, 0x4d, 0x41, 0x54, 0x52, 0x49, 0x58, 0x5f, 0x43,
	0x59, 0x43, 0x4c, 0x45, 0x5f, 0x4f, 0x55, 0x54, 0x5f, 0x49, 0x4e, 0x10, 0x0f, 0x12, 0x20, 0x0a,
	0x1c, 0x52, 0x47, 0x42, 0x5f, 0x4d, 0x41, 0x54, 0x52, 0x49, 0x58, 0x5f, 0x43, 0x59, 0x43, 0x4c,
	0x45, 0x5f, 0x4f, 0x55, 0x54, 0x5f, 0x49, 0x4e, 0x5f, 0x44, 0x55, 0x41, 0x4c, 0x10, 0x10, 0x12,
	0x25, 0x0a, 0x21, 0x52, 0x47, 0x42, 0x5f, 0x4d, 0x41, 0x54, 0x52, 0x49, 0x58, 0x5f, 0x52, 0x41,
	0x49, 0x4e, 0x42, 0x4f, 0x57, 0x5f, 0x4d, 0x4f, 0x56, 0x49, 0x4e, 0x47, 0x5f, 0x43, 0x48, 0x45,
	0x56, 0x52, 0x4f, 0x4e, 0x10, 0x11, 0x12, 0x1d, 0x0a, 0x19, 0x52, 0x47, 0x42, 0x5f, 0x4d, 0x41,
	0x54, 0x52, 0x49, 0x58, 0x5f, 0x43, 0x59, 0x43, 0x4c, 0x45, 0x5f, 0x50, 0x49, 0x4e, 0x57, 0x48,
	0x45, 0x45, 0x4c, 0x10, 0x12, 0x12, 0x1b, 0x0a, 0x17, 0x52, 0x47, 0x42, 0x5f, 0x4d, 0x41, 0x54,
	0x52, 0x49, 0x58, 0x5f, 0x43, 0x59, 0x43, 0x4c, 0x45, 0x5f, 0x53, 0x50, 0x49, 0x52, 0x41, 0x4c,
	0x10, 0x13, 0x12, 0x1a, 0x0a, 0x16, 0x52, 0x47, 0x42, 0x5f, 0x4d, 0x41, 0x54, 0x52, 0x49, 0x58,
	0x5f, 0x44, 0x55, 0x41, 0x4c, 0x5f, 0x42, 0x45, 0x41, 0x43, 0x4f, 0x4e, 0x10, 0x14, 0x12, 0x1d,
	0x0a, 0x19, 0x52, 0x47, 0x42, 0x5f, 0x4d, 0x41, 0x54, 0x52, 0x49, 0x58, 0x5f, 0x52, 0x41, 0x49,
	0x4e, 0x42, 0x4f, 0x57, 0x5f, 0x42, 0x45, 0x41, 0x43, 0x4f, 0x4e, 0x10, 0x15, 0x12, 0x20, 0x0a,
	0x1c, 0x52, 0x47, 0x42, 0x5f, 0x4d, 0x41, 0x54, 0x52, 0x49, 0x58, 0x5f, 0x52, 0x41, 0x49, 0x4e,
	0x42, 0x4f, 0x57, 0x5f, 0x50, 0x49, 0x4e, 0x57, 0x48, 0x45, 0x45, 0x4c, 0x53, 0x10, 0x16, 0x12,
	0x18, 0x0a, 0x14, 0x52, 0x47, 0x42, 0x5f, 0x4d, 0x41, 0x54, 0x52, 0x49, 0x58, 0x5f, 0x52, 0x41,
	0x49, 0x4e, 0x44, 0x52, 0x4f, 0x50, 0x53, 0x10, 0x17, 0x12, 0x22, 0x0a, 0x1e, 0x52, 0x47, 0x42,
	0x5f, 0x4d, 0x41, 0x54, 0x52, 0x49, 0x58, 0x5f, 0x4a, 0x45, 0x4c, 0x4c, 0x59, 0x42, 0x45, 0x41,
	0x4e, 0x5f, 0x52, 0x41, 0x49, 0x4e, 0x44, 0x52, 0x4f, 0x50, 0x53, 0x10, 0x18, 0x12, 0x1d, 0x0a,
	0x19, 0x52, 0x47, 0x42, 0x5f, 0x4d, 0x41, 0x54, 0x52, 0x49, 0x58, 0x5f, 0x54, 0x59, 0x50, 0x49,
	0x4e, 0x47, 0x5f, 0x48, 0x45, 0x41, 0x54, 0x4d, 0x41, 0x50, 0x10, 0x19, 0x12, 0x1b, 0x0a, 0x17,
	0x52, 0x47, 0x42, 0x5f, 0x4d, 0x41, 0x54, 0x52, 0x49, 0x58, 0x5f, 0x44, 0x49, 0x47, 0x49, 0x54,
	0x41, 0x4c, 0x5f, 0x52, 0x41, 0x49, 0x4e, 0x10, 0x1a, 0x12, 0x24, 0x0a, 0x20, 0x52, 0x47, 0x42,
	0x5f, 0x4d, 0x41, 0x54, 0x52, 0x49, 0x58, 0x5f, 0x53, 0x4f, 0x4c, 0x49, 0x44, 0x5f, 0x52, 0x45,
	0x41, 0x43, 0x54, 0x49, 0x56, 0x45, 0x5f, 0x53, 0x49, 0x4d, 0x50, 0x4c, 0x45, 0x10, 0x1b, 0x12,
	0x1d, 0x0a, 0x19, 0x52, 0x47, 0x42, 0x5f, 0x4d, 0x41, 0x54, 0x52, 0x49, 0x58, 0x5f, 0x53, 0x4f,
	0x4c, 0x49, 0x44, 0x5f, 0x52, 0x45, 0x41, 0x43, 0x54, 0x49, 0x56, 0x45, 0x10, 0x1c, 0x12, 0x22,
	0x0a, 0x1e, 0x52, 0x47, 0x42, 0x5f, 0x4d, 0x41, 0x54, 0x52, 0x49, 0x58, 0x5f, 0x53, 0x4f, 0x4c,
	0x49, 0x44, 0x5f, 0x52, 0x45, 0x41, 0x43, 0x54, 0x49, 0x56, 0x45, 0x5f, 0x57, 0x49, 0x44, 0x45,
	0x10, 0x1d, 0x12, 0x27, 0x0a, 0x23, 0x52, 0x47, 0x42, 0x5f, 0x4d, 0x41, 0x54, 0x52, 0x49, 0x58,
	0x5f, 0x53, 0x4f, 0x4c, 0x49, 0x44, 0x5f, 0x52, 0x45, 0x41, 0x43, 0x54, 0x49, 0x56, 0x45, 0x5f,
	0x4d, 0x55, 0x4c, 0x54, 0x49, 0x57, 0x49, 0x44, 0x45, 0x10, 0x1e, 0x12, 0x23, 0x0a, 0x1f, 0x52,
	0x47, 0x42, 0x5f, 0x4d, 0x41, 0x54, 0x52, 0x49, 0x58, 0x5f, 0x53, 0x4f, 0x4c, 0x49, 0x44, 0x5f,
	0x52, 0x45, 0x41, 0x43, 0x54, 0x49, 0x56, 0x45, 0x5f, 0x43, 0x52, 0x4f, 0x53, 0x53, 0x10, 0x1f,
	0x12, 0x28, 0x0a, 0x24, 0x52, 0x47, 0x42, 0x5f, 0x4d, 0x41, 0x54, 0x52, 0x49, 0x58, 0x5f, 0x53,
	0x4f, 0x4c, 0x49, 0x44, 0x5f, 0x52, 0x45, 0x41, 0x43, 0x54, 0x49, 0x56, 0x45, 0x5f, 0x4d, 0x55,
	0x4c, 0x54, 0x49, 0x43, 0x52, 0x4f, 0x53, 0x53, 0x10, 0x20, 0x12, 0x23, 0x0a, 0x1f, 0x52, 0x47,
	0x42, 0x5f, 0x4d, 0x41, 0x54, 0x52, 0x49, 0x58, 0x5f, 0x53, 0x4f, 0x4c, 0x49, 0x44, 0x5f, 0x52,
	0x45, 0x41, 0x43, 0x54, 0x49, 0x56, 0x45, 0x5f, 0x4e, 0x45, 0x58, 0x55, 0x53, 0x10, 0x21, 0x12,
	0x28, 0x0a, 0x24, 0x52, 0x47, 0x42, 0x5f, 0x4d, 0x41, 0x54, 0x52, 0x49, 0x58, 0x5f, 0x53, 0x4f,
	0x4c, 0x49, 0x44, 0x5f, 0x52, 0x45, 0x41, 0x43, 0x54, 0x49, 0x56, 0x45, 0x5f, 0x4d, 0x55, 0x4c,
	0x54, 0x49, 0x4e, 0x45, 0x58, 0x55, 0x53, 0x10, 0x22, 0x12, 0x15, 0x0a, 0x11, 0x52, 0x47, 0x42,
	0x5f, 0x4d, 0x41, 0x54, 0x52, 0x49, 0x58, 0x5f, 0x53, 0x50, 0x4c, 0x41, 0x53, 0x48, 0x10, 0x23,
	0x12, 0x1a, 0x0a, 0x16, 0x52, 0x47, 0x42, 0x5f, 0x4d, 0x41, 0x54, 0x52, 0x49, 0x58, 0x5f, 0x4d,
	0x55, 0x4c, 0x54, 0x49, 0x53, 0x50, 0x4c, 0x41, 0x53, 0x48, 0x10, 0x24, 0x12, 0x1b, 0x0a, 0x17,
	0x52, 0x47, 0x42, 0x5f, 0x4d, 0x41, 0x54, 0x52, 0x49, 0x58, 0x5f, 0x53, 0x4f, 0x4c, 0x49, 0x44,
	0x5f, 0x53, 0x50, 0x4c, 0x41, 0x53, 0x48, 0x10, 0x25, 0x12, 0x20, 0x0a, 0x1c, 0x52, 0x47, 0x42,
	0x5f, 0x4d, 0x41, 0x54, 0x52, 0x49, 0x58, 0x5f, 0x53, 0x4f, 0x4c, 0x49, 0x44, 0x5f, 0x4d, 0x55,
	0x4c, 0x54, 0x49, 0x53, 0x50, 0x4c, 0x41, 0x53, 0x48, 0x10, 0x26, 0x12, 0x12, 0x0a, 0x0e, 0x52,
	0x47, 0x42, 0x5f, 0x4d, 0x41, 0x54, 0x52, 0x49, 0x58, 0x5f, 0x4d, 0x41, 0x58, 0x10, 0x27, 0x32,
	0xf8, 0x05, 0x0a, 0x0b, 0x42, 0x44, 0x4e, 0x39, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12,
	0x34, 0x0a, 0x0a, 0x53, 0x65, 0x74, 0x52, 0x47, 0x42, 0x4d, 0x6f, 0x64, 0x65, 0x12, 0x12, 0x2e,
	0x53, 0x65, 0x74, 0x52, 0x47, 0x42, 0x4d, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x10, 0x2e, 0x53, 0x65, 0x74, 0x52, 0x47, 0x42, 0x4d, 0x6f, 0x64, 0x65, 0x52, 0x65,
	0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x3a, 0x0a, 0x0c, 0x53, 0x65, 0x74, 0x4d, 0x61, 0x74, 0x72,
	0x69, 0x78, 0x48, 0x53, 0x56, 0x12, 0x14, 0x2e, 0x53, 0x65, 0x74, 0x4d, 0x61, 0x74, 0x72, 0x69,
	0x78, 0x48, 0x53, 0x56, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x12, 0x2e, 0x53, 0x65,
	0x74, 0x4d, 0x61, 0x74, 0x72, 0x69, 0x78, 0x48, 0x53, 0x56, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22,
	0x00, 0x12, 0x3a, 0x0a, 0x0c, 0x54, 0x6f, 0x67, 0x67, 0x6c, 0x65, 0x4d, 0x61, 0x74, 0x72, 0x69,
	0x78, 0x12, 0x14, 0x2e, 0x54, 0x6f, 0x67, 0x67, 0x6c, 0x65, 0x4d, 0x61, 0x74, 0x72, 0x69, 0x78,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x12, 0x2e, 0x54, 0x6f, 0x67, 0x67, 0x6c, 0x65,
	0x4d, 0x61, 0x74, 0x72, 0x69, 0x78, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x43, 0x0a,
	0x0f, 0x53, 0x65, 0x74, 0x49, 0x6e, 0x64, 0x69, 0x63, 0x61, 0x74, 0x6f, 0x72, 0x48, 0x53, 0x56,
	0x12, 0x17, 0x2e, 0x53, 0x65, 0x74, 0x49, 0x6e, 0x64, 0x69, 0x63, 0x61, 0x74, 0x6f, 0x72, 0x48,
	0x53, 0x56, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x15, 0x2e, 0x53, 0x65, 0x74, 0x49,
	0x6e, 0x64, 0x69, 0x63, 0x61, 0x74, 0x6f, 0x72, 0x48, 0x53, 0x56, 0x52, 0x65, 0x70, 0x6c, 0x79,
	0x22, 0x00, 0x12, 0x43, 0x0a, 0x0f, 0x54, 0x6f, 0x67, 0x67, 0x6c, 0x65, 0x49, 0x6e, 0x64, 0x69,
	0x63, 0x61, 0x74, 0x6f, 0x72, 0x12, 0x17, 0x2e, 0x54, 0x6f, 0x67, 0x67, 0x6c, 0x65, 0x49, 0x6e,
	0x64, 0x69, 0x63, 0x61, 0x74, 0x6f, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x15,
	0x2e, 0x54, 0x6f, 0x67, 0x67, 0x6c, 0x65, 0x49, 0x6e, 0x64, 0x69, 0x63, 0x61, 0x74, 0x6f, 0x72,
	0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x43, 0x0a, 0x0f, 0x45, 0x6e, 0x61, 0x62, 0x6c,
	0x65, 0x49, 0x6e, 0x64, 0x69, 0x63, 0x61, 0x74, 0x6f, 0x72, 0x12, 0x17, 0x2e, 0x45, 0x6e, 0x61,
	0x62, 0x6c, 0x65, 0x49, 0x6e, 0x64, 0x69, 0x63, 0x61, 0x74, 0x6f, 0x72, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x1a, 0x15, 0x2e, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x49, 0x6e, 0x64, 0x69,
	0x63, 0x61, 0x74, 0x6f, 0x72, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x46, 0x0a, 0x10,
	0x44, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x49, 0x6e, 0x64, 0x69, 0x63, 0x61, 0x74, 0x6f, 0x72,
	0x12, 0x18, 0x2e, 0x44, 0x69, 0x73, 0x61, 0x62, 0x6c, 0x65, 0x49, 0x6e, 0x64, 0x69, 0x63, 0x61,
	0x74, 0x6f, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x44, 0x69, 0x73,
	0x61, 0x62, 0x6c, 0x65, 0x49, 0x6e, 0x64, 0x69, 0x63, 0x61, 0x74, 0x6f, 0x72, 0x52, 0x65, 0x70,
	0x6c, 0x79, 0x22, 0x00, 0x12, 0x3d, 0x0a, 0x0d, 0x41, 0x63, 0x74, 0x69, 0x76, 0x61, 0x74, 0x65,
	0x4c, 0x61, 0x79, 0x65, 0x72, 0x12, 0x15, 0x2e, 0x41, 0x63, 0x74, 0x69, 0x76, 0x61, 0x74, 0x65,
	0x4c, 0x61, 0x79, 0x65, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x13, 0x2e, 0x41,
	0x63, 0x74, 0x69, 0x76, 0x61, 0x74, 0x65, 0x4c, 0x61, 0x79, 0x65, 0x72, 0x52, 0x65, 0x70, 0x6c,
	0x79, 0x22, 0x00, 0x12, 0x2e, 0x0a, 0x08, 0x53, 0x65, 0x74, 0x53, 0x70, 0x65, 0x65, 0x64, 0x12,
	0x10, 0x2e, 0x53, 0x65, 0x74, 0x53, 0x70, 0x65, 0x65, 0x64, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x1a, 0x0e, 0x2e, 0x53, 0x65, 0x74, 0x53, 0x70, 0x65, 0x65, 0x64, 0x52, 0x65, 0x70, 0x6c,
	0x79, 0x22, 0x00, 0x12, 0x3d, 0x0a, 0x0d, 0x53, 0x65, 0x74, 0x4d, 0x75, 0x74, 0x65, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x12, 0x15, 0x2e, 0x53, 0x65, 0x74, 0x4d, 0x75, 0x74, 0x65, 0x53, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x13, 0x2e, 0x53, 0x65,
	0x74, 0x4d, 0x75, 0x74, 0x65, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x70, 0x6c, 0x79,
	0x22, 0x00, 0x12, 0x2b, 0x0a, 0x07, 0x45, 0x6e, 0x64, 0x43, 0x61, 0x6c, 0x6c, 0x12, 0x0f, 0x2e,
	0x45, 0x6e, 0x64, 0x43, 0x61, 0x6c, 0x6c, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x0d,
	0x2e, 0x45, 0x6e, 0x64, 0x43, 0x61, 0x6c, 0x6c, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12,
	0x25, 0x0a, 0x05, 0x52, 0x65, 0x73, 0x65, 0x74, 0x12, 0x0d, 0x2e, 0x52, 0x65, 0x73, 0x65, 0x74,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x0b, 0x2e, 0x52, 0x65, 0x73, 0x65, 0x74, 0x52,
	0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x22, 0x0a, 0x04, 0x45, 0x63, 0x68, 0x6f, 0x12, 0x0c,
	0x2e, 0x45, 0x63, 0x68, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x0a, 0x2e, 0x45,
	0x63, 0x68, 0x6f, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x42, 0x2b, 0x5a, 0x29, 0x67, 0x69,
	0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x61, 0x6e, 0x64, 0x79, 0x74, 0x68, 0x69,
	0x67, 0x70, 0x65, 0x6e, 0x2f, 0x62, 0x64, 0x6e, 0x39, 0x5f, 0x63, 0x6f, 0x6d, 0x70, 0x2f, 0x76,
	0x32, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_proto_bdn9_proto_rawDescOnce sync.Once
	file_proto_bdn9_proto_rawDescData = file_proto_bdn9_proto_rawDesc
)

func file_proto_bdn9_proto_rawDescGZIP() []byte {
	file_proto_bdn9_proto_rawDescOnce.Do(func() {
		file_proto_bdn9_proto_rawDescData = protoimpl.X.CompressGZIP(file_proto_bdn9_proto_rawDescData)
	})
	return file_proto_bdn9_proto_rawDescData
}

var file_proto_bdn9_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_proto_bdn9_proto_msgTypes = make([]protoimpl.MessageInfo, 26)
var file_proto_bdn9_proto_goTypes = []interface{}{
	(Layer)(0),                      // 0: Layer
	(RGBMode)(0),                    // 1: RGBMode
	(*SetRGBModeRequest)(nil),       // 2: SetRGBModeRequest
	(*SetRGBModeReply)(nil),         // 3: SetRGBModeReply
	(*SetMatrixHSVRequest)(nil),     // 4: SetMatrixHSVRequest
	(*SetMatrixHSVReply)(nil),       // 5: SetMatrixHSVReply
	(*ToggleMatrixRequest)(nil),     // 6: ToggleMatrixRequest
	(*ToggleMatrixReply)(nil),       // 7: ToggleMatrixReply
	(*SetIndicatorHSVRequest)(nil),  // 8: SetIndicatorHSVRequest
	(*SetIndicatorHSVReply)(nil),    // 9: SetIndicatorHSVReply
	(*ToggleIndicatorRequest)(nil),  // 10: ToggleIndicatorRequest
	(*ToggleIndicatorReply)(nil),    // 11: ToggleIndicatorReply
	(*EnableIndicatorRequest)(nil),  // 12: EnableIndicatorRequest
	(*EnableIndicatorReply)(nil),    // 13: EnableIndicatorReply
	(*DisableIndicatorRequest)(nil), // 14: DisableIndicatorRequest
	(*DisableIndicatorReply)(nil),   // 15: DisableIndicatorReply
	(*ActivateLayerRequest)(nil),    // 16: ActivateLayerRequest
	(*ActivateLayerReply)(nil),      // 17: ActivateLayerReply
	(*SetSpeedRequest)(nil),         // 18: SetSpeedRequest
	(*SetSpeedReply)(nil),           // 19: SetSpeedReply
	(*SetMuteStatusRequest)(nil),    // 20: SetMuteStatusRequest
	(*SetMuteStatusReply)(nil),      // 21: SetMuteStatusReply
	(*EndCallRequest)(nil),          // 22: EndCallRequest
	(*EndCallReply)(nil),            // 23: EndCallReply
	(*ResetRequest)(nil),            // 24: ResetRequest
	(*ResetReply)(nil),              // 25: ResetReply
	(*EchoRequest)(nil),             // 26: EchoRequest
	(*EchoReply)(nil),               // 27: EchoReply
}
var file_proto_bdn9_proto_depIdxs = []int32{
	0,  // 0: SetIndicatorHSVRequest.layer:type_name -> Layer
	0,  // 1: ToggleIndicatorRequest.layer:type_name -> Layer
	0,  // 2: EnableIndicatorRequest.layer:type_name -> Layer
	0,  // 3: DisableIndicatorRequest.layer:type_name -> Layer
	0,  // 4: ActivateLayerRequest.layer:type_name -> Layer
	2,  // 5: BDN9Service.SetRGBMode:input_type -> SetRGBModeRequest
	4,  // 6: BDN9Service.SetMatrixHSV:input_type -> SetMatrixHSVRequest
	6,  // 7: BDN9Service.ToggleMatrix:input_type -> ToggleMatrixRequest
	8,  // 8: BDN9Service.SetIndicatorHSV:input_type -> SetIndicatorHSVRequest
	10, // 9: BDN9Service.ToggleIndicator:input_type -> ToggleIndicatorRequest
	12, // 10: BDN9Service.EnableIndicator:input_type -> EnableIndicatorRequest
	14, // 11: BDN9Service.DisableIndicator:input_type -> DisableIndicatorRequest
	16, // 12: BDN9Service.ActivateLayer:input_type -> ActivateLayerRequest
	18, // 13: BDN9Service.SetSpeed:input_type -> SetSpeedRequest
	20, // 14: BDN9Service.SetMuteStatus:input_type -> SetMuteStatusRequest
	22, // 15: BDN9Service.EndCall:input_type -> EndCallRequest
	24, // 16: BDN9Service.Reset:input_type -> ResetRequest
	26, // 17: BDN9Service.Echo:input_type -> EchoRequest
	3,  // 18: BDN9Service.SetRGBMode:output_type -> SetRGBModeReply
	5,  // 19: BDN9Service.SetMatrixHSV:output_type -> SetMatrixHSVReply
	7,  // 20: BDN9Service.ToggleMatrix:output_type -> ToggleMatrixReply
	9,  // 21: BDN9Service.SetIndicatorHSV:output_type -> SetIndicatorHSVReply
	11, // 22: BDN9Service.ToggleIndicator:output_type -> ToggleIndicatorReply
	13, // 23: BDN9Service.EnableIndicator:output_type -> EnableIndicatorReply
	15, // 24: BDN9Service.DisableIndicator:output_type -> DisableIndicatorReply
	17, // 25: BDN9Service.ActivateLayer:output_type -> ActivateLayerReply
	19, // 26: BDN9Service.SetSpeed:output_type -> SetSpeedReply
	21, // 27: BDN9Service.SetMuteStatus:output_type -> SetMuteStatusReply
	23, // 28: BDN9Service.EndCall:output_type -> EndCallReply
	25, // 29: BDN9Service.Reset:output_type -> ResetReply
	27, // 30: BDN9Service.Echo:output_type -> EchoReply
	18, // [18:31] is the sub-list for method output_type
	5,  // [5:18] is the sub-list for method input_type
	5,  // [5:5] is the sub-list for extension type_name
	5,  // [5:5] is the sub-list for extension extendee
	0,  // [0:5] is the sub-list for field type_name
}

func init() { file_proto_bdn9_proto_init() }
func file_proto_bdn9_proto_init() {
	if File_proto_bdn9_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_proto_bdn9_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetRGBModeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_bdn9_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetRGBModeReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_bdn9_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetMatrixHSVRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_bdn9_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetMatrixHSVReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_bdn9_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ToggleMatrixRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_bdn9_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ToggleMatrixReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_bdn9_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetIndicatorHSVRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_bdn9_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetIndicatorHSVReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_bdn9_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ToggleIndicatorRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_bdn9_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ToggleIndicatorReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_bdn9_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EnableIndicatorRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_bdn9_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EnableIndicatorReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_bdn9_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DisableIndicatorRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_bdn9_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*DisableIndicatorReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_bdn9_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ActivateLayerRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_bdn9_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ActivateLayerReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_bdn9_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetSpeedRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_bdn9_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetSpeedReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_bdn9_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetMuteStatusRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_bdn9_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SetMuteStatusReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_bdn9_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EndCallRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_bdn9_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EndCallReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_bdn9_proto_msgTypes[22].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResetRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_bdn9_proto_msgTypes[23].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ResetReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_bdn9_proto_msgTypes[24].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EchoRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_proto_bdn9_proto_msgTypes[25].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EchoReply); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_proto_bdn9_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   26,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_proto_bdn9_proto_goTypes,
		DependencyIndexes: file_proto_bdn9_proto_depIdxs,
		EnumInfos:         file_proto_bdn9_proto_enumTypes,
		MessageInfos:      file_proto_bdn9_proto_msgTypes,
	}.Build()
	File_proto_bdn9_proto = out.File
	file_proto_bdn9_proto_rawDesc = nil
	file_proto_bdn9_proto_goTypes = nil
	file_proto_bdn9_proto_depIdxs = nil
}
